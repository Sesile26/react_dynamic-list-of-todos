{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","props","todos","selectUser","changeStatus","title","handleTitle","status","handleStatus","className","htmlFor","type","id","value","onChange","placeholder","map","todo","classnames","completed","checked","onClick","userId","getData","url","fetch","then","res","json","CurrentUser","state","user","this","loadUser","prev","a","setState","name","email","phone","React","Component","App","selectedUserId","todosCopy","event","target","preparedTodos","filter","toLowerCase","includes","todosFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2cd05d2.chunk.js","sourcesContent":["import classnames from 'classnames';\nimport React from 'react';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[],\n  selectUser: (userId: number) => void,\n  changeStatus: (id: number) => void,\n  title: string,\n  handleTitle: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  status: string,\n  handleStatus: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n};\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const {\n    todos,\n    selectUser,\n    changeStatus,\n    title,\n    handleTitle,\n    status,\n    handleStatus,\n  } = props;\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <label htmlFor=\"title\">\n        <input\n          type=\"text\"\n          id=\"title\"\n          value={title}\n          onChange={handleTitle}\n          className=\"input TodoList__findByTitle\"\n          placeholder=\"Find by title\"\n        />\n      </label>\n\n      <div className=\"select TodoList__findByComplited\">\n        <select\n          value={status}\n          onChange={handleStatus}\n        >\n          <option value=\"\">All</option>\n          <option value=\"complited\">Complited</option>\n          <option value=\"active\">Active</option>\n        </select>\n      </div>\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {todos.map(todo => (\n            <li\n              key={todo.id}\n              className={classnames(\n                'TodoList__item',\n                { 'TodoList__item--checked': todo.completed },\n                { 'TodoList__item--unchecked': !todo.completed },\n              )}\n            >\n              <label htmlFor={`checkbox-${todo.id}`}>\n                <input\n                  type=\"checkbox\"\n                  id={`checkbox-${todo.id}`}\n                  checked={todo.completed}\n                  onChange={() => changeStatus(todo.id)}\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                type=\"button\"\n                className=\"\n                TodoList__user-button\n                TodoList__user-button--selected\n                button\n                \"\n                onClick={() => selectUser(todo.userId)}\n              >\n                User&nbsp;#\n                {todo.userId}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst apiUrl = 'https://mate.academy/students-api/';\n\nconst getData = (url: string) => {\n  return fetch(apiUrl + url)\n    .then(res => res.json());\n};\n\nexport const getTodos = (): Promise<Todo[]> => getData('todos');\n\nexport const getUser = (userId: number): Promise<User> => getData(`users/${userId}`);\n","import React from 'react';\nimport { getUser } from '../../api';\nimport './CurrentUser.scss';\n\ntype Props = {\n  userId: number,\n  selectUser: (id: number) => void,\n};\n\ntype State = {\n  user: User | null,\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate(prev: Props) {\n    if (this.props.userId !== prev.userId) {\n      this.loadUser();\n    }\n  }\n\n  async loadUser() {\n    const user: User = await getUser(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  render(): React.ReactNode {\n    const { user } = this.state;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${user?.id}`}</span></h2>\n\n        <h3 className=\"CurrentUser__name\">{user?.name}</h3>\n        <p className=\"CurrentUser__email\">{user?.email}</p>\n        <p className=\"CurrentUser__phone\">{user?.phone}</p>\n\n        <button\n          type=\"button\"\n          onClick={() => this.props.selectUser(0)}\n          className=\"TodoList__user-button button\"\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\ninterface State {\n  selectedUserId: number;\n  todos: Todo[],\n  title: string,\n  status: string,\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n    todos: [],\n    title: '',\n    status: '',\n  };\n\n  async componentDidMount() {\n    const todosFromServer = await getTodos();\n\n    this.setState({ todos: [...todosFromServer] });\n  }\n\n  selectUser = (userId: number) => {\n    if (this.state.selectedUserId !== userId) {\n      this.setState({\n        selectedUserId: userId,\n      });\n    }\n  };\n\n  changeStatus = (id: number) => {\n    const todosCopy = this.state.todos.map(todo => {\n      if (todo.id === id) {\n        return { ...todo, completed: !todo.completed };\n      }\n\n      return todo;\n    });\n\n    this.setState(() => ({\n      todos: todosCopy,\n    }));\n  };\n\n  handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      title: event.target.value,\n    });\n  };\n\n  handleStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      status: event.target.value,\n    });\n  };\n\n  preparedTodos = () => {\n    const {\n      todos,\n      title,\n      status,\n    } = this.state;\n\n    let todosCopy = [...todos];\n\n    if (title) {\n      todosCopy = todosCopy.filter(todo => todo.title.toLowerCase().includes(title.toLowerCase()));\n    }\n\n    switch (status) {\n      case 'active':\n        return todosCopy.filter(todo => !todo.completed);\n\n      case 'complited':\n        return todosCopy.filter(todo => todo.completed);\n\n      default:\n        return todosCopy;\n    }\n  };\n\n  render() {\n    const { selectedUserId, title, status } = this.state;\n    const preparedTodos = this.preparedTodos();\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={preparedTodos}\n            selectUser={this.selectUser}\n            changeStatus={this.changeStatus}\n            title={title}\n            handleTitle={this.handleTitle}\n            status={status}\n            handleStatus={this.handleStatus}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                selectUser={this.selectUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}